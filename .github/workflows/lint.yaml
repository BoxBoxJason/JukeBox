name: code-lint
on: [push, pull_request]
jobs:
  golanci-lint:
    if: github.ref != 'refs/heads/frontend' # Do not run on frontend branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v6.0.1
        with:
          args: --enable-all --tests --out-format sarif ./... > golangci-lint.json
        continue-on-error: true

      - name: Upload golangci-lint report
        uses: actions/upload-artifact@v4
        with:
          name: golangci-lint report
          path: golangci-lint.json
        continue-on-error: true


  gosec:
    if: github.ref != 'refs/heads/frontend' # Do not run on frontend branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Gosec security scanner
        uses: securego/gosec@master
        with:
          args: -fail high -fmt sarif -out gosec.json ./...
        continue-on-error: true

      - name: Show gosec report
        run: cat gosec.json
        continue-on-error: true

      - name: Upload gosec report
        uses: actions/upload-artifact@v4
        with:
          name: gosec-report
          path: gosec.json
        continue-on-error: true


  eslint:
    if: github.ref != 'refs/heads/backend' # Do not run on backend branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Run ESLint
        run: "npm run lint:ci"
        working-directory: frontend
        continue-on-error: true

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: frontend/eslint-report.json
